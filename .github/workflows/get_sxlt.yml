name: Get Sxlt

on:
  schedule:
    - cron: '0 */6 * * *'
      timezone: Asia/Shanghai
  workflow_dispatch:

jobs:
  get_streams:
    runs-on: ubuntu-latest

    steps:
    - name: Check out code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests

    - name: Create 和 Run Python script
      run: |
        cat > get_iptv.py << 'EOF'
        import requests

        urls = [
            "https://tv.wekh.eu.org/sxlt.txt",
            "https://tv.wekh.eu.org/itv.txt"
        ]

        def ensure_one_blank_line_after_group(text: str) -> str:
            lines = text.splitlines()
            n = len(lines)
            header_idxs = [i for i, line in enumerate(lines) if "#genre#" in line]
            new_lines = []
            for idx, h in enumerate(header_idxs):
                end = header_idxs[idx + 1] if idx + 1 < len(header_idxs) else n
                last_line_idx = end - 1
                # 添加分组内容
                for i in range(h, end):
                    new_lines.append(lines[i])
                # 删除多余空行
                while last_line_idx + 1 < len(lines) and lines[last_line_idx + 1].strip() == "":
                    last_line_idx += 1
                # 保证分组最后只有一行空行
                if new_lines[-1].strip() != "":
                    new_lines.append("")
            return "\n".join(new_lines)

        with open("tvlive/iptv.txt", "w") as file:
            first_file = True
            for url in urls:
                try:
                    response = requests.get(url)
                    response.raise_for_status()
                    playlist = response.text
                    playlist = ensure_one_blank_line_after_group(playlist)

                    # 合并文件时，前一个文件末尾没有空行，插入一行空行
                    if not first_file:
                        file.seek(file.tell() - 1)
                        # 检查上一行是否为空行
                        file.seek(0)
                        content = file.read()
                        if not content.endswith("\n\n"):
                            file.write("\n")
                    first_file = False

                    if not playlist.endswith("\n"):
                        playlist += "\n"

                    file.write(playlist)
                    print(f"✅ 内容已成功从 {url} 保存到 tvlive/iptv.txt 文件中")
                except requests.exceptions.RequestException as e:
                    print(f"❌ 请求失败: {url} - {e}")

        print("🎬 所有内容已处理完毕")
        EOF

        python get_iptv.py

    - name: Commit 和 push changes
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add tvlive/iptv.txt
        git commit -m "Update live streams playlist" --allow-empty
        git push
