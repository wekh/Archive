name: Get Sxzb

on:
  schedule:
    - cron: '0 */6 * * *'  # 每 6 小时运行一次
      timezone: Asia/Shanghai
  workflow_dispatch:

jobs:
  get_streams:
    runs-on: ubuntu-latest

    steps:
    - name: Check out code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests

    - name: Create 和 Run Python script
      run: |
        cat > get_iptv.py << 'EOF'
        import requests

        urls = [
            "https://tv.wekh.eu.org/sxzb.txt",
            "https://tv.wekh.eu.org/itv.txt"
        ]

        def ensure_blank_line_before_genre(text: str) -> str:
            """确保每个 #genre# 前至少有一个空行"""
            lines = text.splitlines()
            new_lines = []
            for i, line in enumerate(lines):
                if line.strip().endswith("#genre#"):
                    if i > 0 and lines[i - 1].strip() != "":
                        new_lines.append("")
                new_lines.append(line)
            return "\n".join(new_lines)

        def remove_duplicate_lines(text: str) -> str:
            """去掉完全相同的重复行（保留顺序）"""
            seen = set()
            result = []
            for line in text.splitlines():
                # 保留空行
                if line.strip() == "":
                    result.append("")
                    continue
                if line not in seen:
                    seen.add(line)
                    result.append(line)
            return "\n".join(result)

        with open("tvlive/iptv.txt", "w") as file:
            all_content = []

            for url in urls:
                try:
                    response = requests.get(url)
                    response.raise_for_status()
                    playlist = response.text

                    playlist = ensure_blank_line_before_genre(playlist)
                    all_content.append(playlist)
                    print(f"✅ 内容已成功从 {url} 获取")

                except requests.exceptions.RequestException as e:
                    print(f"❌ 请求失败: {url} - {e}")

            # 合并所有内容
            combined = "\n".join(all_content)

            # 去重
            combined = remove_duplicate_lines(combined)

            # 结尾加换行
            if not combined.endswith('\n'):
                combined += '\n'

            file.write(combined)
            print("🎬 所有内容已处理完毕，文件已保存到 tvlive/iptv.txt")
        EOF

        python get_iptv.py

    - name: Commit 和 push changes
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add tvlive/iptv.txt
        git commit -m "Update live streams playlist" --allow-empty
        git push
